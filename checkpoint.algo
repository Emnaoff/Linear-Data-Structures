ALGORITHM algorithm_Distinct
ALGORITHM checkpoint DS
VAR
    set_declarations
    set_1: ARRAY_OF integer type[length];
    set_2: ARRAY_OF type[length];
    i : INTEGER := 0;
    j : INTEGER := 0;
    TEST : BOOLEAN ;
    sum : INTEGER := 0 ;

BEGIN
    set_instructions
END 
write ("enter the elements of set_1 :") ;
read (set_1[i]) ;
write ("enter the elemnts of set_2 :")
// Boucle pour le 1er Set
    FOR i FROM 0 TO length-1 STEP 1  DO
    // init BOOLEAN 
    TEST := FALSE ;
        write (set_1[i]);
        // BOoucle pour le 2eme set
        FOR j FROM 0 TO length-1 STEP 1  DO
        write (set_2[i]) ;
        IF (set_1[i] == set_2[j]) THEN
            TEST := TRUE ;
            set_1[i]= 0 ;
        END_IF
        IF (TEST = TRUE) THEN
            set_2[i] = 0 ;
        END_IF
        END_FOR
        END_FOR
        FOR i FROM 0 TO length-1 STEP 1  DO
            sum := sum + set1[i] ;
        END_FOR
        FOR j FROM 0 TO length-1 STEP 1  DO
            sum :=sum + set_2[i] ;
        END_FOR


END




// exemple 2 : HASH_TAB

VAR
    Set1, Set2 : ARRAY_OF [50];
    htab: HASH_TABLE<INTEGER,INTEGER>
    i,j,sum,count :INTEGER :=0;
BEGIN
//Boucle set_1
    FOR i FROM 0 TO Set1.length -1 STEP 1  DO
    IF (htab.lookup(Set1[i]) = TRUE) THEN
        count := htab.get(Set1[i]);
        htab.insert(Set1[i],count+1);
    ELSE
        htab.insert(Set1[i],1);
    END_IF
    END_FOR
// Boucle set_2 
    FOR i FROM 0 TO Set2.length -1 STEP 1  DO
    IF (htab.lookup(Set2[i]) = TRUE) THEN
        count := htab.get(Set2[i]);
        htab.insert(Set2[i],count+1);
        ELSE
        htab.insert(Set2[i],1);
    END_IF
    END_FOR  
    FOR i FROM 0 TO Set1.length -1 STEP 1  DO
    IF (htab.get(Set1[i]) != 1) THEN
        sum := sum + Set1[i];
    END_IF
    END_FOR
    FOR i FROM 0 TO Set2.length -1 STEP 1  DO
        IF (htab.get(Set2[i]) != 1) THEN
            sum := sum + Set2[i];
        END_IF
    END_FOR
    Write(" sum = "); Write(sum);

END 